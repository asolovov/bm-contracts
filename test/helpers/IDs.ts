export enum StatusID {
  UNKNOWN,
  whatIsDeadMayNeverDie,
  callOfCthulhu,
  darkMatter,
  deepSeatedFears,
  decayAndRot,
  fearFeaster,
  gravemine,
  reflection,
  coolAid,
  regeneration,
  fromGenerosity,
  everythingPoison,
  humility,
  retribution,
  purity,
  deepFreeze,
  poison,
  waterShield,
  toxicShock,
  abundantGrowth,
  stunning,
  shrapnel,
  grounding,
  iAmFire,
  wallOfFire,
  fireAcolyte,
  ashenShield,
  ignition,
  burns,
  depletedAir,
  airShield,
  staticElectricity,
}

export enum ActionID {
  UNKNOWN,
  shields0_2Air,
  heal0_2Air,
  shields5Air,
  breakShieldsAllAir,
  piercing2Air,
  shields0Air,
  classicDamage0Air,
  classicDamage2_3Air,
  classicDamage1_2Air,
  classicDamage1Air,
  classicDamage2Air,
  burnSpellIfMaxHP,
  burnAllStatuses,
  decreaseShields1IfShieldsMore0,
  deal1IncreaseShields,
  skipTurn,
  skip30Chance,
  skip50Chance,
  deal2ShieldsIfHealthLessThan6,
  deal9Classic,
  deal1Healing,
  deal1HealingIfDead,
  deal1ClassicIfShields0,
  deal1PiercingIfSkip,
  deal1PiercingIfHealthMoreThan6,
  burnSpellIfSkip,
  deal1Piercing,
  deal2Piercing,
  addBurnsStatus,
  changeStatusToIgnition,
  ifMaxHPAddLightningClassicSpell,
  addDeepSeatedFears,
  addDepletedAir,
  classic3AirIfStaticElStatus,
  classic1AirIfNoStaticElStatus,
  addStaticElectricity,
  addAirShield,
}

export enum MutationID {
  UNKNOWN,
  blockStatuses,
  decreaseDamage1IfDamageMoreThan1,
  healingToClassic,
  setDamageToHP,
  increasePiercing,
  blockPiercing,
  classicToPiercing,
  blockBurnsMutation,
  blockIgnitionMutation,
  classicToHealingFire,
  blockShieldDamage,
}

export enum SpellID {
  UNKNOWN,
  megaVoltWunderwaffle,
  powerSurge,
  blitzkriegByte,
  teslasTrick,
  doubleTroubleThunder,
  zephyrZipline,
  aeroAssault,
  lightningClassic,
  thunderstruckTwirl,
  zeldasZigzag,
}
